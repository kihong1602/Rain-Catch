spring:
  profiles:
    active: local
    group:
      local:
        - common
      prod:
        - common

---
# local
spring:
  config:
    activate:
      on-profile: local

  datasource:
    hikari:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: ${LOCAL_MASTER_URL}
        username: ${LOCAL_MASTER_USERNAME}
        password: ${LOCAL_MASTER_PASSWORD}
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: ${LOCAL_SLAVE_URL}
        username: ${LOCAL_SLAVE_USERNAME}
        password: ${LOCAL_SLAVE_PASSWORD}

  data:
    redis:
      host: ${LOCAL_REDIS_HOST}
      port: ${LOCAL_REDIS_PORT}
      password: ${LOCAL_REDIS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        highlight_sql: true
        show_sql: true
        connection:
          characterEncoding: utf-8
          useUnicode: true
          CharSet: utf-8

  sql:
    init:
      mode: always

---
# prod
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    hikari:
      master:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: ${PROD_MASTER_URL}
        username: ${PROD_MASTER_USERNAME}
        password: ${PROD_MASTER_PASSWORD}
      slave:
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: ${PROD_SLAVE_URL}
        username: ${PROD_SLAVE_USERNAME}
        password: ${PROD_SLAVE_PASSWORD}

  data:
    redis:
      host: ${PROD_REDIS_HOST}
      port: ${PROD_REDIS_PORT}
      password: ${PROD_REDIS_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        highlight_sql: true
        show_sql: true
        connection:
          characterEncoding: utf-8
          useUnicode: true
          CharSet: utf-8
    open-in-view: false



---
# common
spring:
  config:
    activate:
      on-profile: common
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - email
              - profile

          kakao:
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            client-name: kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            scope:
              - account_email
              - profile_nickname
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
jwt:
  secret: ${JWT_SECRET}

network:
  max-connection: 30
  max-per-route: 10
  timeout:
    connect: 5
    socket: 5

port-one:
  imp-key: ${IMP_KEY}
  imp-secret: ${IMP_SECRET}

#logging:
#  level:
#    org.springframework.security: trace